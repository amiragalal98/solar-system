name: solar system

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'staging'

jobs:
  unit-test:
    name: Unit Test
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        node-version: [14.x, 16.x]
        exclude:
          - node-version: 18
            os: macos-latest
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm test

  code-coverage:
    name: Code Covering
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Dependencies
        run: npm install

      - name: Run Code Coverage
        run: npm run cover

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: coverage

  docker:
    name: Docker Build & Push
    needs: [unit-test, code-coverage]
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/solar-system:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/solar-system:latest
